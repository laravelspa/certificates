import{Q as s}from"./QInput.a8bac8ea.js";import{o as d,c as p,w as r,V as i,T as n,a6 as u,r as l,aA as m}from"./app.3d0443e2.js";import"./use-key-composition.68005297.js";import"./use-dark.46133ca7.js";import"./uid.fa5a297c.js";import"./focus-manager.387b0375.js";import"./use-form.ae068b8e.js";const $={__name:"BaseInput",props:{label:{type:String,required:!0,default:""},inputModel:{type:[String,Number],default:""},type:{type:String,required:!1,default:"text"},errors:{type:Array,required:!1,default:()=>[]}},setup(e){return(t,a)=>(d(),p(s,m({outlined:"",rounded:"","bottom-slots":"","lazy-rules":"",type:e.type,label:e.label},t.$attrs,{modelValue:e.inputModel,"onUpdate:modelValue":a[0]||(a[0]=o=>e.inputModel=o),autocomplete:"off"}),{error:r(()=>[i("div",{class:n(t.$q.dark.isActive?"text-red-3":"text-negative")},u(e.errors&&e.errors[0].$message),3)]),prepend:r(()=>[l(t.$slots,"prepand")]),append:r(()=>[l(t.$slots,"append")]),_:3},16,["type","label","modelValue"]))}};export{$ as default};
