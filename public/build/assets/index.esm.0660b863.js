import{R as u}from"./app.3d0443e2.js";function p(r){return typeof r=="function"}function A(r){return r!==null&&typeof r=="object"&&!Array.isArray(r)}function V(r){return p(r.$validator)?Object.assign({},r):{$validator:r}}function I(r){return A(r)&&p(r.then)}function m(r){return typeof r=="object"?r.$valid:r}function g(r){return r.$validator||r}function P(r,e){if(!A(r))throw new Error(`[@vuelidate/validators]: First parameter to "withParams" should be an object, provided ${typeof r}`);if(!A(e)&&!p(e))throw new Error("[@vuelidate/validators]: Validator must be a function or object with $validator parameter");const t=V(e);return t.$params=Object.assign({},t.$params||{},r),t}function y(r,e){if(!p(r)&&typeof u(r)!="string")throw new Error(`[@vuelidate/validators]: First parameter to "withMessage" should be string or a function returning a string, provided ${typeof r}`);if(!A(e)&&!p(e))throw new Error("[@vuelidate/validators]: Validator must be a function or object with $validator parameter");const t=V(e);return t.$message=r,t}function S(r){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[];const t=V(r);return Object.assign({},t,{$async:!0,$watchTargets:e})}function U(r){return{$validator(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];return u(e).reduce((s,i,o)=>{const h=Object.entries(i).reduce(($,c)=>{let[w,j]=c;const R=r[w]||{},T=Object.entries(R).reduce((f,E)=>{let[O,z]=E;const x=g(z).call(this,j,i,o,...n),v=m(x);if(f.$data[O]=x,f.$data.$invalid=!v||!!f.$data.$invalid,f.$data.$error=f.$data.$invalid,!v){let b=z.$message||"";const L=z.$params||{};typeof b=="function"&&(b=b({$pending:!1,$invalid:!v,$params:L,$model:j,$response:x})),f.$errors.push({$property:w,$message:b,$params:L,$response:x,$model:j,$pending:!1,$validator:O})}return{$valid:f.$valid&&v,$data:f.$data,$errors:f.$errors}},{$valid:!0,$data:{},$errors:[]});return $.$data[w]=T.$data,$.$errors[w]=T.$errors,{$valid:$.$valid&&T.$valid,$data:$.$data,$errors:$.$errors}},{$valid:!0,$data:{},$errors:{}});return{$valid:s.$valid&&h.$valid,$data:s.$data.concat(h.$data),$errors:s.$errors.concat(h.$errors)}},{$valid:!0,$data:[],$errors:[]})},$message:e=>{let{$response:t}=e;return t?t.$errors.map(n=>Object.values(n).map(a=>a.map(s=>s.$message)).reduce((a,s)=>a.concat(s),[])):[]}}}const d=r=>{if(r=u(r),Array.isArray(r))return!!r.length;if(r==null)return!1;if(r===!1)return!0;if(r instanceof Date)return!isNaN(r.getTime());if(typeof r=="object"){for(let e in r)return!0;return!1}return!!String(r).length},q=r=>(r=u(r),Array.isArray(r)?r.length:typeof r=="object"?Object.keys(r).length:String(r).length);function l(){for(var r=arguments.length,e=new Array(r),t=0;t<r;t++)e[t]=arguments[t];return n=>(n=u(n),!d(n)||e.every(a=>a.test(n)))}var D=Object.freeze({__proto__:null,withParams:P,withMessage:y,withAsync:S,forEach:U,req:d,len:q,regex:l,unwrap:u,unwrapNormalizedValidator:g,unwrapValidatorResponse:m,normalizeValidatorObject:V}),C=l(/^[a-zA-Z]*$/),Z={$validator:C,$message:"The value is not alphabetical",$params:{type:"alpha"}},F=l(/^[a-zA-Z0-9]*$/),B={$validator:F,$message:"The value must be alpha-numeric",$params:{type:"alphaNum"}},G=l(/^\d*(\.\d+)?$/),H={$validator:G,$message:"Value must be numeric",$params:{type:"numeric"}};function J(r,e){return t=>!d(t)||(!/\s/.test(t)||t instanceof Date)&&+u(r)<=+t&&+u(e)>=+t}function K(r,e){return{$validator:J(r,e),$message:t=>{let{$params:n}=t;return`The value must be between ${n.min} and ${n.max}`},$params:{min:r,max:e,type:"between"}}}const Q=/^(?:[A-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[A-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9]{2,}(?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])$/i;var W=l(Q),X={$validator:W,$message:"Value is not a valid email address",$params:{type:"email"}};function Y(r){if(!d(r))return!0;if(typeof r!="string")return!1;const e=r.split(".");return e.length===4&&e.every(_)}const _=r=>{if(r.length>3||r.length===0||r[0]==="0"&&r!=="0"||!r.match(/^\d+$/))return!1;const e=+r|0;return e>=0&&e<=255};var k={$validator:Y,$message:"The value is not a valid IP address",$params:{type:"ipAddress"}};function rr(){let r=arguments.length>0&&arguments[0]!==void 0?arguments[0]:":";return e=>{if(r=u(r),!d(e))return!0;if(typeof e!="string")return!1;const t=typeof r=="string"&&r!==""?e.split(r):e.length===12||e.length===16?e.match(/.{2}/g):null;return t!==null&&(t.length===6||t.length===8)&&t.every(er)}}const er=r=>r.toLowerCase().match(/^[0-9a-f]{2}$/);function tr(r){return{$validator:rr(r),$message:"The value is not a valid MAC Address",$params:{type:"macAddress"}}}function nr(r){return e=>!d(e)||q(e)<=u(r)}function ar(r){return{$validator:nr(r),$message:e=>{let{$params:t}=e;return`The maximum length allowed is ${t.max}`},$params:{max:r,type:"maxLength"}}}function sr(r){return e=>!d(e)||q(e)>=u(r)}function ir(r){return{$validator:sr(r),$message:e=>{let{$params:t}=e;return`This field should be at least ${t.min} characters long`},$params:{min:r,type:"minLength"}}}function ur(r){return typeof r=="string"&&(r=r.trim()),d(r)}var or={$validator:ur,$message:"Value is required",$params:{type:"required"}};const M=(r,e)=>r?d(typeof e=="string"?e.trim():e):!0;function dr(r){return function(e,t){if(typeof r!="function")return M(u(r),e);const n=r.call(this,e,t);return M(n,e)}}function cr(r){return{$validator:dr(r),$message:"The value is required",$params:{type:"requiredIf",prop:r}}}const N=(r,e)=>r?!0:d(typeof e=="string"?e.trim():e);function fr(r){return function(e,t){if(typeof r!="function")return N(u(r),e);const n=r.call(this,e,t);return N(n,e)}}function $r(r){return{$validator:fr(r),$message:"The value is required",$params:{type:"requiredUnless",prop:r}}}function mr(r){return e=>u(e)===u(r)}function lr(r){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"other";return{$validator:mr(r),$message:t=>`The value must be equal to the ${e} value`,$params:{equalTo:r,otherName:e,type:"sameAs"}}}const gr=/^(?:(?:(?:https?|ftp):)?\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z0-9\u00a1-\uffff][a-z0-9\u00a1-\uffff_-]{0,62})?[a-z0-9\u00a1-\uffff]\.)+(?:[a-z\u00a1-\uffff]{2,}\.?))(?::\d{2,5})?(?:[/?#]\S*)?$/i;var hr=l(gr),pr={$validator:hr,$message:"The value is not a valid URL address",$params:{type:"url"}};function yr(r,e,t){return t?e?e(r):r:((!r||!r.then)&&(r=Promise.resolve(r)),e?r.then(e):r)}function wr(r){return function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return r.reduce((a,s)=>m(a)?a:g(s).apply(this,t),!1)}}function xr(r){return function(){const e=this;for(var t=arguments.length,n=new Array(t),a=0;a<t;a++)n[a]=arguments[a];return r.reduce(function(s,i){return yr(s,function(o){return m(o)?o:g(i).apply(e,n)})},Promise.resolve(!1))}}function vr(){for(var r=arguments.length,e=new Array(r),t=0;t<r;t++)e[t]=arguments[t];const n=e.some(i=>i.$async),a=e.reduce((i,o)=>o.$watchTargets?i.concat(o.$watchTargets):i,[]);let s=()=>!1;return e.length&&(s=n?xr(e):wr(e)),{$async:n,$validator:s,$watchTargets:a}}function br(){return P({type:"or"},y("The value does not match any of the provided validators",vr(...arguments)))}function Ar(r,e,t){return t?e?e(r):r:((!r||!r.then)&&(r=Promise.resolve(r)),e?r.then(e):r)}function Vr(r){return function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return r.reduce((a,s)=>m(a)?g(s).apply(this,t):a,!0)}}function jr(r){return function(){const e=this;for(var t=arguments.length,n=new Array(t),a=0;a<t;a++)n[a]=arguments[a];return r.reduce(function(s,i){return Ar(s,function(o){return m(o)?g(i).apply(e,n):o})},Promise.resolve(!0))}}function Tr(){for(var r=arguments.length,e=new Array(r),t=0;t<r;t++)e[t]=arguments[t];const n=e.some(i=>i.$async),a=e.reduce((i,o)=>o.$watchTargets?i.concat(o.$watchTargets):i,[]);let s=()=>!1;return e.length&&(s=n?jr(e):Vr(e)),{$async:n,$validator:s,$watchTargets:a}}function zr(){return P({type:"and"},y("The value does not match all of the provided validators",Tr(...arguments)))}function Pr(r){return function(e,t){if(!d(e))return!0;const n=g(r).call(this,e,t);return I(n)?n.then(a=>!m(a)):!m(n)}}function qr(r){return{$validator:Pr(r),$message:"The value does not match the provided validator",$params:{type:"not"}}}function Or(r){return e=>!d(e)||(!/\s/.test(e)||e instanceof Date)&&+e>=+u(r)}function Lr(r){return{$validator:Or(r),$message:e=>{let{$params:t}=e;return`The minimum value allowed is ${t.min}`},$params:{min:r,type:"minValue"}}}function Mr(r){return e=>!d(e)||(!/\s/.test(e)||e instanceof Date)&&+e<=+u(r)}var Nr=r=>({$validator:Mr(r),$message:e=>{let{$params:t}=e;return`The maximum value allowed is ${t.max}`},$params:{max:r,type:"maxValue"}}),Rr=l(/(^[0-9]*$)|(^-[0-9]+$)/),Er={$validator:Rr,$message:"Value is not an integer",$params:{type:"integer"}},Ir=l(/^[-]?\d*(\.\d+)?$/),Sr={$validator:Ir,$message:"Value must be decimal",$params:{type:"decimal"}};function Ur(r){let{t:e,messagePath:t=a=>{let{$validator:s}=a;return`validations.${s}`},messageParams:n=a=>a}=r;return function(s){let{withArguments:i=!1,messagePath:o=t,messageParams:h=n}=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};function $(c){return e(o(c),h(Object.assign({model:c.$model,property:c.$property,pending:c.$pending,invalid:c.$invalid,response:c.$response,validator:c.$validator,propertyPath:c.$propertyPath},c.$params)))}return i&&typeof s=="function"?function(){return y($,s(...arguments))}:y($,s)}}var Zr=Object.freeze(Object.defineProperty({__proto__:null,alpha:Z,alphaNum:B,and:zr,between:K,createI18nMessage:Ur,decimal:Sr,email:X,helpers:D,integer:Er,ipAddress:k,macAddress:tr,maxLength:ar,maxValue:Nr,minLength:ir,minValue:Lr,not:qr,numeric:H,or:br,required:or,requiredIf:cr,requiredUnless:$r,sameAs:lr,url:pr},Symbol.toStringTag,{value:"Module"}));export{Z as a,B as b,ar as c,cr as d,X as e,$r as f,Lr as g,Nr as h,Er as i,D as j,ir as m,or as r,lr as s,pr as u,Zr as v};
